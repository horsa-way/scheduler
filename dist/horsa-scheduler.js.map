{"version":3,"file":"horsa-scheduler.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\nconst MONTH = 'month';\nconst DAY = 'day';\nconst HOUR = 'hour';\nconst MINUTE = 'minute';\nconst SECOND = 'second';\nconst MILLISECOND = 'millisecond';\n\nexport default {\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\n        if (date instanceof Date) {\n            return date;\n        }\n        if (typeof date === 'string') {\n            let date_parts, time_parts;\n            const parts = date.split(' ');\n\n            date_parts = parts[0]\n                .split(date_separator)\n                .map((val) => parseInt(val, 10));\n            time_parts = parts[1] && parts[1].split(time_separator);\n\n            // month is 0 indexed\n            date_parts[1] = date_parts[1] - 1;\n\n            let vals = date_parts;\n\n            if (time_parts && time_parts.length) {\n                if (time_parts.length == 4) {\n                    time_parts[3] = '0.' + time_parts[3];\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\n                }\n                vals = vals.concat(time_parts);\n            }\n\n            return new Date(...vals);\n        }\n    },\n\n    to_string(date, with_time = false) {\n        if (!(date instanceof Date)) {\n            throw new TypeError('Invalid argument type');\n        }\n        const vals = this.get_date_values(date).map((val, i) => {\n            if (i === 1) {\n                // add 1 for month\n                val = val + 1;\n            }\n\n            if (i === 6) {\n                return padStart(val + '', 3, '0');\n            }\n\n            return padStart(val + '', 2, '0');\n        });\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\n\n        return date_string + (with_time ? ' ' + time_string : '');\n    },\n\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'it') {\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n            year: 'numeric',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            fractionalSecondDigits: 3,\n            weekday: 'long',\n            month: 'long',\n            timeZone: \"UTC\",\n        });\n        const parts = dateTimeFormat.formatToParts(date);\n        const dateParts = {};\n        parts.forEach(({ type, value }) => {\n            dateParts[type] = value;\n        });\n        const day_name_capitalized = dateParts.weekday.charAt(0).toUpperCase() + dateParts.weekday.slice(1);\n        const month_name_capitalized = dateParts.month.charAt(0).toUpperCase() + dateParts.month.slice(1);\n        const format_map = {\n            YYYY: dateParts.year,\n            YYY: dateParts.year.substring(2,4),\n            MM: dateParts.month.padStart(2, '0'),\n            DD: dateParts.day.padStart(2, '0'),\n            HH: dateParts.hour.padStart(2, '0'),\n            mm: dateParts.minute.padStart(2, '0'),\n            ss: dateParts.second.padStart(2, '0'),\n            SSS: dateParts.fractionalSecond.padStart(3, '0'),\n            D: dateParts.day.padStart(2, '0'),\n            MMM: month_name_capitalized,\n            MM: month_name_capitalized.substring(0,3),\n            ddd: day_name_capitalized,\n            dd: day_name_capitalized.substring(0,2)\n        };\n\n        let str = format_string;\n        const formatted_values = [];\n\n        Object.keys(format_map)\n            .sort((a, b) => b.length - a.length) // big string first\n            .forEach((key) => {\n                if (str.includes(key)) {\n                    str = str.replace(key, `$${formatted_values.length}`);\n                    formatted_values.push(format_map[key]);\n                }\n            });\n\n        formatted_values.forEach((value, i) => {\n            str = str.replace(`$${i}`, value);\n        });\n\n        return str;\n    },\n\n    diff(date_a, date_b, scale = DAY) {\n        let milliseconds, seconds, hours, minutes, days, months, years;\n\n        milliseconds = date_a - date_b;\n        seconds = milliseconds / 1000;\n        minutes = seconds / 60;\n        hours = minutes / 60;\n        days = hours / 24;\n        months = days / 30;\n        years = months / 12;\n\n        if (!scale.endsWith('s')) {\n            scale += 's';\n        }\n\n        return Math.round(\n            {\n                milliseconds,\n                seconds,\n                minutes,\n                hours,\n                days,\n                months,\n                years,\n            }[scale]\n        );\n    },\n\n    today() {\n        const vals = this.get_date_values(new Date()).slice(0, 3);\n        return new Date(...vals);\n    },\n\n    now() {\n        return new Date();\n    },\n\n    add(date, qty, scale) {\n        qty = parseInt(qty, 10);\n        const vals = [\n            date.getUTCFullYear() + (scale === YEAR ? qty : 0),\n            date.getUTCMonth() + (scale === MONTH ? qty : 0),\n            date.getUTCDate() + (scale === DAY ? qty : 0),\n            date.getUTCHours() + (scale === HOUR ? qty : 0),\n            date.getUTCMinutes() + (scale === MINUTE ? qty : 0),\n            date.getUTCSeconds() + (scale === SECOND ? qty : 0),\n            date.getUTCMilliseconds() + (scale === MILLISECOND ? qty : 0),\n        ];\n        return new Date(Date.UTC(...vals));\n    },\n\n    start_of(date, scale) {\n        if (scale == 'week')\n        {\n            var d = this.clone(date);\n            var day = d.getUTCDay(), diff = d.getUTCDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\n            d.setUTCDate(diff);\n            return d;\n        }\n\n        const scores = {\n            [YEAR]: 6,\n            [MONTH]: 5,\n            [DAY]: 4,\n            [HOUR]: 3,\n            [MINUTE]: 2,\n            [SECOND]: 1,\n            [MILLISECOND]: 0,\n        };\n\n        function should_reset(_scale) {\n            const max_score = scores[scale];\n            return scores[_scale] <= max_score;\n        }\n\n        const vals = [\n            date.getFullYear(),\n            should_reset(YEAR) ? 0 : date.getUTCMonth(),\n            should_reset(MONTH) ? 1 : date.getUTCDate(),\n            should_reset(DAY) ? 0 : date.getUTCHours(),\n            should_reset(HOUR) ? 0 : date.getUTCMinutes(),\n            should_reset(MINUTE) ? 0 : date.getUTCSeconds(),\n            should_reset(SECOND) ? 0 : date.getUTCMilliseconds(),\n        ];\n\n        return new Date(Date.UTC(...vals));\n    },\n\n    clone(date) {\n        return new Date(Date.UTC(...this.get_date_values(date)));\n    },\n\n    get_date_values(date) {\n        return [\n            date.getUTCFullYear(),\n            date.getUTCMonth(),\n            date.getUTCDate(),\n            date.getUTCHours(),\n            date.getUTCMinutes(),\n            date.getUTCSeconds(),\n            date.getUTCMilliseconds(),\n        ];\n    },\n\n    get_days_in_month(date) {\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n        const month = date.getMonth();\n\n        if (month !== 1) {\n            return no_of_days[month];\n        }\n\n        // Feb\n        const year = date.getFullYear();\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n            return 29;\n        }\n        return 28;\n    },\n\n    normalize_UTC(date) {\n        return new Date(Date.UTC(\n            date.getFullYear(),\n            date.getMonth(),\n            date.getDate(),\n            date.getHours(),\n            date.getMinutes(),\n            date.getSeconds(),\n            date.getMilliseconds()\n        ));\n    },\n\n    to_local(date) {\n        return new Date(\n            date.getUTCFullYear(),\n            date.getUTCMonth(),\n            date.getUTCDate(),\n            date.getUTCHours(),\n            date.getUTCMinutes(),\n            date.getUTCSeconds(),\n            date.getUTCMilliseconds(),\n        );\n    }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n    str = str + '';\n    targetLength = targetLength >> 0;\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\n    if (str.length > targetLength) {\n        return String(str);\n    } else {\n        targetLength = targetLength - str.length;\n        if (targetLength > padString.length) {\n            padString += padString.repeat(targetLength / padString.length);\n        }\n        return padString.slice(0, targetLength) + String(str);\n    }\n}\n","export function $(expr, con) {\n    return typeof expr === 'string'\n        ? (con || document).querySelector(expr)\n        : expr || null;\n}\n\nexport function createSVG(tag, attrs) {\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\n    for (let attr in attrs) {\n        if (attr === 'append_to') {\n            const parent = attrs.append_to;\n            parent.appendChild(elem);\n        } else if (attr === 'innerHTML') {\n            elem.innerHTML = attrs.innerHTML;\n        } else {\n            elem.setAttribute(attr, attrs[attr]);\n        }\n    }\n    return elem;\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\n\n    if (animatedSvgElement === svgElement) {\n        // triggered 2nd time programmatically\n        // trigger artificial click event\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent('click', true, true);\n        event.eventName = 'click';\n        animatedSvgElement.dispatchEvent(event);\n    }\n}\n\nfunction getAnimationElement(\n    svgElement,\n    attr,\n    from,\n    to,\n    dur = '0.4s',\n    begin = '0.1s'\n) {\n    const animEl = svgElement.querySelector('animate');\n    if (animEl) {\n        $.attr(animEl, {\n            attributeName: attr,\n            from,\n            to,\n            dur,\n            begin: 'click + ' + begin, // artificial click\n        });\n        return svgElement;\n    }\n\n    const animateElement = createSVG('animate', {\n        attributeName: attr,\n        from,\n        to,\n        dur,\n        begin,\n        calcMode: 'spline',\n        values: from + ';' + to,\n        keyTimes: '0; 1',\n        keySplines: cubic_bezier('ease-out'),\n    });\n    svgElement.appendChild(animateElement);\n\n    return svgElement;\n}\n\nfunction cubic_bezier(name) {\n    return {\n        ease: '.25 .1 .25 1',\n        linear: '0 0 1 1',\n        'ease-in': '.42 0 1 1',\n        'ease-out': '0 0 .58 1',\n        'ease-in-out': '.42 0 .58 1',\n    }[name];\n}\n\n$.on = (element, event, selector, callback) => {\n    if (!callback) {\n        callback = selector;\n        $.bind(element, event, callback);\n    } else {\n        $.delegate(element, event, selector, callback);\n    }\n};\n\n$.off = (element, event, handler) => {\n    element.removeEventListener(event, handler);\n};\n\n$.bind = (element, event, callback) => {\n    event.split(/\\s+/).forEach(function (event) {\n        element.addEventListener(event, callback);\n    });\n};\n\n$.delegate = (element, event, selector, callback) => {\n    element.addEventListener(event, function (e) {\n        const delegatedTarget = e.target.closest(selector);\n        if (delegatedTarget) {\n            e.delegatedTarget = delegatedTarget;\n            callback.call(this, e, delegatedTarget);\n        }\n    });\n};\n\n$.closest = (selector, element) => {\n    if (!element) return null;\n\n    if (element.matches(selector)) {\n        return element;\n    }\n\n    return $.closest(selector, element.parentNode);\n};\n\n$.attr = (element, attr, value) => {\n    if (!value && typeof attr === 'string') {\n        return element.getAttribute(attr);\n    }\n\n    if (typeof attr === 'object') {\n        for (let key in attr) {\n            $.attr(element, key, attr[key]);\n        }\n        return;\n    }\n\n    element.setAttribute(attr, value);\n};\n","import date_utils from './date_utils';\nimport { $, createSVG, animateSVG } from './svg_utils';\n\nexport default class Bar {\n    constructor(scheduler, task) {\n        this.set_defaults(scheduler, task);\n        this.prepare();\n        this.draw();\n        this.bind();\n    }\n\n    set_defaults(scheduler, task) {\n        this.action_completed = false;\n        this.scheduler = scheduler;\n        this.task = task;\n    }\n\n    prepare() {\n        this.prepare_values();\n        this.prepare_helpers();\n    }\n\n    prepare_values() {\n        let task_end = this.task._end;\n        this.invalid = this.task.invalid;\n        this.height = this.scheduler.options.bar_height;\n        this.handle_width = 8;\n        this.x = this.compute_x();\n        this.y = this.compute_y();\n        this.corner_radius = this.scheduler.options.bar_corner_radius;\n        const duration_in_minutes = date_utils.diff(task_end, this.task._start, 'minute');\n        if (this.scheduler.view_is('Hour')) {\n            this.duration =\n                duration_in_minutes /\n                this.scheduler.options.step;\n        } else {\n            this.duration =\n                date_utils.diff(task_end, this.task._start, 'hour') /\n                this.scheduler.options.step;\n            if (duration_in_minutes < 60) {\n                if (this.scheduler.view_is('Day') ||\n                    this.scheduler.view_is('Half Day') ||\n                    this.scheduler.view_is('Quarter Day'))\n                    this.duration = 0.1;\n                else\n                    this.duration = 0.03;\n\n            }\n        }\n        this.width = this.scheduler.options.column_width * this.duration;\n        this.progress_width =\n            this.scheduler.options.column_width *\n            this.duration *\n            (this.task.progress / 100) || 0;\n        this.group = createSVG('g', {\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\n            'data-id': this.task.id,\n        });\n        this.bar_group = createSVG('g', {\n            class: 'bar-group',\n            append_to: this.group,\n        });\n        this.handle_group = createSVG('g', {\n            class: 'handle-group',\n            append_to: this.group,\n        });\n    }\n\n    prepare_helpers() {\n        SVGElement.prototype.getX = function () {\n            return +this.getAttribute('x');\n        };\n        SVGElement.prototype.getY = function () {\n            return +this.getAttribute('y');\n        };\n        SVGElement.prototype.getWidth = function () {\n            return +this.getAttribute('width');\n        };\n        SVGElement.prototype.getHeight = function () {\n            return +this.getAttribute('height');\n        };\n        SVGElement.prototype.getEndX = function () {\n            return this.getX() + this.getWidth();\n        };\n    }\n\n    draw() {\n        this.draw_bar();\n        this.draw_progress_bar();\n        this.draw_label();\n        this.draw_resize_handles();\n    }\n\n    draw_bar() {\n        this.$bar = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar, 'width', 0, this.width);\n\n        if (this.invalid) {\n            this.$bar.classList.add('bar-invalid');\n        }\n    }\n\n    draw_progress_bar() {\n        if (this.invalid) return;\n        this.$bar_progress = createSVG('rect', {\n            x: this.x,\n            y: this.y,\n            width: this.progress_width,\n            height: this.height,\n            rx: this.corner_radius,\n            ry: this.corner_radius,\n            class: 'bar-progress',\n            append_to: this.bar_group,\n        });\n\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\n    }\n\n    draw_label() {\n        createSVG('text', {\n            x: this.x + this.width / 2,\n            y: this.y + this.height / 2,\n            innerHTML: this.task.name,\n            class: 'bar-label',\n            append_to: this.bar_group,\n        });\n        // labels get BBox in the next tick\n        requestAnimationFrame(() => this.update_label_position());\n    }\n\n    draw_resize_handles() {\n        if (this.invalid) return;\n\n        const bar = this.$bar;\n        const handle_width = this.handle_width;\n\n        if (this.task.resize_right)\n            createSVG('rect', {\n                x: bar.getX() + bar.getWidth() - handle_width - 1,\n                y: bar.getY() + 1,\n                width: handle_width,\n                height: this.height - 2,\n                rx: this.corner_radius,\n                ry: this.corner_radius,\n                class: 'handle right',\n                append_to: this.handle_group,\n            });\n\n        if (this.task.resize_left)\n            createSVG('rect', {\n                x: bar.getX() + 1,\n                y: bar.getY() + 1,\n                width: handle_width,\n                height: this.height - 2,\n                rx: this.corner_radius,\n                ry: this.corner_radius,\n                class: 'handle left',\n                append_to: this.handle_group,\n            });\n\n        if (this.task.progress && this.task.progress < 100) {\n            this.$handle_progress = createSVG('polygon', {\n                points: this.get_progress_polygon_points().join(','),\n                class: 'handle progress',\n                append_to: this.handle_group,\n            });\n        }\n    }\n\n    get_progress_polygon_points() {\n        const bar_progress = this.$bar_progress;\n        return [\n            bar_progress.getEndX() - 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX() + 5,\n            bar_progress.getY() + bar_progress.getHeight(),\n            bar_progress.getEndX(),\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\n        ];\n    }\n\n    bind() {\n        if (this.invalid) return;\n        this.setup_click_event();\n    }\n\n    setup_click_event() {\n        $.on(this.group, 'mouseover', '.bar-wrapper', (e) => {\n            if (this.scheduler.bar_being_dragged)\n                return;\n            // if (!e.target.classList.contains('bar')) return;\n            this.show_popup(e);\n        });\n\n        $.on(this.group, 'mouseleave', '.bar-wrapper', (e) => {\n            if (e.relatedTarget != null &&\n                (e.relatedTarget.classList.contains('pointer') ||\n                    e.relatedTarget.classList.contains('title'))) return;\n            this.scheduler.hide_popup();\n        });\n\n        $.on(this.group, 'click', (e) => {\n            if (this.action_completed) return;\n\n            this.scheduler.unselect_all();\n            this.group.classList.add('active');\n        });\n\n        $.on(this.group, 'dblclick', (e) => {\n            if (this.action_completed) {\n                // just finished a move action, wait for a few seconds\n                return;\n            }\n\n            this.scheduler.trigger_event('task_dblclick', [this.task.id]);\n        });\n    }\n\n    show_popup(e) {\n        const start_date = date_utils.format(\n            this.task._start,\n            'D MMM YYYY HH:mm',\n            this.scheduler.options.language\n        );\n        const end_date = date_utils.format(\n            this.task._end,\n            'D MMM YYYY HH:mm',\n            this.scheduler.options.language\n        );\n        const subtitle = start_date + ' - ' + end_date;\n\n        this.scheduler.show_popup({\n            target_element: this.$bar,\n            title: this.task.name,\n            description: this.task.description,\n            subtitle: subtitle,\n            task: this.task,\n            e: e,\n        });\n    }\n\n    update_bar_position({ x = null, width = null, y = null }) {\n        const bar = this.$bar;\n        if (x) {\n            // get all x values of parent task\n            const xs = this.task.dependencies.map((dep) => {\n                return this.scheduler.get_bar(dep).$bar.getX();\n            });\n            // child task must not go before parent\n            const valid_x = xs.reduce((prev, curr) => {\n                return x >= curr;\n            }, x);\n            if (!valid_x) {\n                width = null;\n                return;\n            }\n            this.update_attr(bar, 'x', x);\n            this.x = x;\n        }\n        if (width && width >= this.handle_width * 2 + 3) {\n            this.update_attr(bar, 'width', width);\n            this.width = width;\n        }\n        if (y) {\n            this.update_attr(bar, 'y', y);\n            this.y = y;\n        }\n        this.update_label_position();\n        this.update_progressbar_position();\n        this.update_handle_position();\n        this.update_arrow_position();\n    }\n\n    position_changed(calc_start, calc_end) {\n        let changed = false;\n        let { new_start_date, new_end_date } = this.compute_start_end_date();\n        if (calc_start) {\n            changed = true;\n            this.task._start = new_start_date;\n            this.task.start = date_utils.to_local(new_start_date);\n        }\n\n        if (calc_end) {\n            changed = true;\n            this.task._end = new_end_date;\n            this.task.end = date_utils.to_local(new_end_date);\n        }\n\n        const new_index = this.compute_index();\n        const new_row = this.scheduler.options.rows[new_index];\n        if (this.task._index !== new_index) {\n            changed = true;\n            this.task._index = new_index;\n            this.task.row = new_row;\n        }\n\n        if (!changed) return;\n\n        this.scheduler.trigger_event('position_change', [\n            this.task,\n            new_row,\n            date_utils.to_local(new_start_date),\n            date_utils.to_local(new_end_date),\n        ]);\n    }\n\n    progress_changed() {\n        const new_progress = this.compute_progress();\n        this.task.progress = new_progress;\n        this.scheduler.trigger_event('progress_change', [this.task, new_progress]);\n    }\n\n    set_action_completed() {\n        this.action_completed = true;\n        setTimeout(() => (this.action_completed = false), 200);\n    }\n\n    compute_start_end_date() {\n        const bar = this.$bar;\n        const x_in_units = bar.getX() / this.scheduler.options.column_width;\n        let new_start_date;\n        if (this.scheduler.view_is('Hour'))\n            new_start_date = date_utils.add(\n                this.scheduler.scheduler_start,\n                x_in_units * this.scheduler.options.step,\n                'minute'\n            );\n        else\n            new_start_date = date_utils.add(\n                this.scheduler.scheduler_start,\n                x_in_units * this.scheduler.options.step,\n                'hour'\n            );\n        const width_in_units = bar.getWidth() / this.scheduler.options.column_width;\n        let new_end_date;\n        if (this.scheduler.view_is('Hour'))\n            new_end_date = date_utils.add(\n                new_start_date,\n                width_in_units * this.scheduler.options.step,\n                'minute'\n            );\n        else\n            new_end_date = date_utils.add(\n                new_start_date,\n                width_in_units * this.scheduler.options.step,\n                'hour'\n            );\n\n        return { new_start_date, new_end_date };\n    }\n\n    compute_index() {\n        const bar = this.$bar;\n        const barY = bar.getY();\n        let sum_height = this.scheduler.options.header_height + this.scheduler.options.padding / 2;\n\n        for (let i = 0; i < this.scheduler.rows.length; i++) {\n            const row_start = sum_height;\n            const row = this.scheduler.rows[i];\n            sum_height += row.height;\n\n            if (barY >= row_start && barY <= sum_height)\n                return i;\n        }\n    }\n\n    compute_progress() {\n        const progress =\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\n        return parseInt(progress, 10);\n    }\n\n    compute_x() {\n        const { step, column_width } = this.scheduler.options;\n        const task_start = this.task._start;\n        const scheduler_start = this.scheduler.scheduler_start;\n\n        let diff;\n        if (this.scheduler.view_is('Hour'))\n            diff = date_utils.diff(task_start, scheduler_start, 'minute');\n        else\n            diff = date_utils.diff(task_start, scheduler_start, 'hour');\n\n        let x = Math.floor((diff / step) * column_width * 1000) / 1000;\n\n        return x;\n    }\n\n    compute_y() {\n        let bar_y;\n        if (this.scheduler.options.overlap) {\n            bar_y = (this.scheduler.options.padding / 2) +\n                (this.scheduler.options.padding + this.scheduler.options.bar_height) * this.task._sub_level_index +\n                this.scheduler.rows[this.task._index].y;\n        } else {\n            bar_y = ((this.scheduler.options.padding / 2) + this.scheduler.rows[this.task._index].y);\n        }\n        return bar_y;\n    }\n\n    get_snap_position(dx) {\n        let odx = dx,\n            rem,\n            position;\n\n        if (this.scheduler.view_is('Week')) {\n            rem = dx % (this.scheduler.options.column_width / 7);\n            position =\n                odx -\n                rem +\n                (rem < this.scheduler.options.column_width / 14\n                    ? 0\n                    : this.scheduler.options.column_width / 7);\n        } else if (this.scheduler.view_is('Month')) {\n            rem = dx % (this.scheduler.options.column_width / 30);\n            position =\n                odx -\n                rem +\n                (rem < this.scheduler.options.column_width / 60\n                    ? 0\n                    : this.scheduler.options.column_width / 30);\n        } else {\n            rem = dx % this.scheduler.options.column_width;\n            position =\n                odx -\n                rem +\n                (rem < this.scheduler.options.column_width / 2\n                    ? 0\n                    : this.scheduler.options.column_width);\n        }\n        return position;\n    }\n\n    update_attr(element, attr, value) {\n        value = +value;\n        if (!isNaN(value)) {\n            element.setAttribute(attr, value);\n        }\n        return element;\n    }\n\n    update_progressbar_position() {\n        if (this.invalid) return;\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\n        this.$bar_progress.setAttribute('y', this.$bar.getY());\n        this.$bar_progress.setAttribute(\n            'width',\n            this.$bar.getWidth() * (this.task.progress / 100)\n        );\n    }\n\n    update_label_position() {\n        const bar = this.$bar,\n            label = this.group.querySelector('.bar-label');\n\n        const handle_width = this.handle_width;\n\n        const max_width = bar.getWidth() - (handle_width * 2);\n        const text = label.textContent;\n        const text_width = label.getBBox().width;\n        const original_text = this.task.name;\n\n        if (text_width + (handle_width * 2) > max_width) {\n            const reduction_percentage = (text_width - max_width) / text_width;\n            const visible_characters = Math.max(0, Math.round(text.length * (1 - reduction_percentage)));\n            label.textContent = text.substring(0, visible_characters);\n        } else {\n            const expansion_percentage = (max_width - text_width) / original_text.length;\n            const visible_characters = Math.min(original_text.length, Math.round(original_text.length * (1 + expansion_percentage)));\n            label.textContent = original_text.substring(0, visible_characters);\n        }\n\n        label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\n        label.setAttribute('y', bar.getY() + bar.getHeight() / 2);\n    }\n\n    update_handle_position() {\n        if (this.invalid) return;\n        const bar = this.$bar;\n\n        let handle = this.handle_group.querySelector('.handle.left');\n        if (handle) {\n            handle.setAttribute('x', bar.getX() + 1)\n            handle.setAttribute('y', bar.getY() + 1)\n        }\n        handle = this.handle_group.querySelector('.handle.right');\n        if (handle) {\n            handle.setAttribute('x', bar.getEndX() - this.handle_width - 1)\n            handle.setAttribute('y', bar.getY() + 1);\n        }\n        handle = this.group.querySelector('.handle.progress');\n        handle &&\n            handle.setAttribute('points', this.get_progress_polygon_points());\n    }\n\n    update_arrow_position() {\n        this.arrows = this.arrows || [];\n        for (let arrow of this.arrows) {\n            arrow.update();\n        }\n    }\n}\n\nfunction isFunction(functionToCheck) {\n    var getType = {};\n    return (\n        functionToCheck &&\n        getType.toString.call(functionToCheck) === '[object Function]'\n    );\n}\n","import { createSVG } from './svg_utils';\n\nexport default class Arrow {\n    constructor(scheduler, from_task, to_task) {\n        this.scheduler = scheduler;\n        this.from_task = from_task;\n        this.to_task = to_task;\n\n        this.calculate_path();\n        this.draw();\n    }\n\n    calculate_path() {\n        let start_x =\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\n\n        const condition = () =>\n            this.to_task.$bar.getX() < start_x + this.scheduler.options.padding &&\n            start_x > this.from_task.$bar.getX() + this.scheduler.options.padding;\n\n        while (condition()) {\n            start_x -= 10;\n        }\n\n        const start_y =\n            this.from_task.$bar.getY() + this.scheduler.options.bar_height;\n\n        const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\n        const end_y =\n            this.to_task.$bar.getY() + this.scheduler.options.bar_height / 2;\n        // ======= TODO Da capire come gestirlo\n        //             this.scheduler.options.header_height +\n        //             this.scheduler.options.bar_height +\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\n        //             this.from_task.task._index +\n        //             this.scheduler.options.padding;\n\n        //         const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\n        //         const end_y =\n        //             this.scheduler.options.header_height +\n        //             this.scheduler.options.bar_height / 2 +\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\n        //             this.to_task.task._index +\n        //             this.scheduler.options.padding;\n        // >>>>>>> 5ec8c1cf7d6f126a89a5e5db096915fb66cda0a4\n\n        const from_is_below_to =\n            this.from_task.$bar.getY() > this.to_task.$bar.getY();\n        const curve = this.scheduler.options.arrow_curve;\n        const clockwise = from_is_below_to ? 1 : 0;\n        const curve_y = from_is_below_to ? -curve : curve;\n        const offset = from_is_below_to\n            ? end_y + this.scheduler.options.arrow_curve\n            : end_y - this.scheduler.options.arrow_curve;\n\n        this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`;\n\n        if (\n            this.to_task.$bar.getX() <\n            this.from_task.$bar.getX() + this.scheduler.options.padding\n        ) {\n            const down_1 = this.scheduler.options.padding / 2 - curve;\n            const down_2 =\n                this.to_task.$bar.getY() +\n                this.to_task.$bar.getHeight() / 2 -\n                curve_y;\n            const left = this.to_task.$bar.getX() - this.scheduler.options.padding;\n\n            this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`;\n        }\n    }\n\n    draw() {\n        this.element = createSVG('path', {\n            d: this.path,\n            'data-from': this.from_task.task.id,\n            'data-to': this.to_task.task.id,\n        });\n    }\n\n    update() {\n        this.calculate_path();\n        this.element.setAttribute('d', this.path);\n    }\n}\n","export default class Popup {\n    constructor(parent, custom_html) {\n        this.parent = parent;\n        this.custom_html = custom_html;\n        this.is_showing = false;\n        this.make();\n    }\n\n    make() {\n        this.parent.innerHTML = `\n            <div class=\"title\"></div>\n            <div class=\"description\"></div>\n            <div class=\"subtitle\"></div>\n            <div class=\"pointer\"></div>\n        `;\n\n        this.hide();\n\n        this.title = this.parent.querySelector('.title');\n        this.description = this.parent.querySelector('.description');\n        this.subtitle = this.parent.querySelector('.subtitle');\n        this.pointer = this.parent.querySelector('.pointer');\n    }\n\n    show(options, container, scroll) {\n        if (this.is_showing) return;\n        if (!options.target_element) {\n            throw new Error('target_element is required to show popup');\n        }\n\n        const target_element = options.target_element;\n        this.target_element = options.target_element;\n        const width = this.compute_width(options.title.length);\n\n        if (this.custom_html) {\n            let html = this.custom_html(options.task);\n            html += '<div class=\"pointer\"></div>';\n            this.parent.innerHTML = html;\n            this.pointer = this.parent.querySelector('.pointer');\n        } else {\n            // set data\n            this.title.innerHTML = options.title;\n\n            this.description.innerHTML = options.description;\n            if (options.description === '')\n                this.description.classList.remove('description');\n            else\n                this.description.classList.add('description');\n\n            this.subtitle.innerHTML = options.subtitle;\n            if (options.subtitle === '')\n                this.subtitle.classList.remove('subtitle');\n            else\n                this.subtitle.classList.add('subtitle');\n\n            this.parent.style.width = width + 'px';\n        }\n\n        // set position\n        let position_meta;\n        if (target_element instanceof HTMLElement) {\n            position_meta = target_element.getBoundingClientRect();\n        } else if (target_element instanceof SVGElement) {\n            position_meta = options.target_element.getBBox();\n        }\n        const middle_popup = width / 2;\n\n        if (options.e.clientY + this.parent.clientHeight + 20 > container.offsetHeight + container.offsetTop) {\n            this.parent.style.left = (options.e.clientX - middle_popup) + 'px';\n            if (options.target_element.localName === 'text')\n                this.parent.style.top = (parseInt(options.target_element.getAttribute('y')) + container.offsetTop - scroll - this.parent.offsetHeight - 20) + 'px';\n            else\n                this.parent.style.top = (parseInt(options.target_element.getAttribute('y')) + container.offsetTop - scroll - this.parent.offsetHeight - 10) + 'px';\n            this.pointer.style.transform = 'rotateZ(0deg)';\n            this.pointer.style.left = middle_popup + 'px';\n            this.pointer.style.top = (this.parent.offsetHeight + 0.5) + 'px';\n        } else {\n            this.parent.style.left = (options.e.clientX - middle_popup) + 'px';\n            if (options.target_element.localName === 'text')\n                this.parent.style.top = (parseInt(options.target_element.getAttribute('y')) + container.offsetTop + 15 - scroll) + 'px';\n            else\n                this.parent.style.top = (parseInt(options.target_element.getAttribute('y')) + container.offsetTop + 30 - scroll) + 'px';\n            this.pointer.style.transform = 'rotateZ(180deg)';\n            this.pointer.style.left = middle_popup + 'px';\n            this.pointer.style.top = '-10px';\n        }\n\n        if (parseFloat(this.parent.style.left) < container.offsetLeft) {\n            this.parent.style.left = container.offsetLeft + 'px';\n            this.pointer.style.left = options.e.clientX - container.offsetLeft + 'px';\n        }\n\n        // show\n        this.parent.style.opacity = 1;\n        this.is_showing = true;\n    }\n\n    compute_width(title_length) {\n        let width;\n        const char_width = 6;\n\n        if (title_length < 20)\n            width = 20 * char_width;\n        else\n            width = title_length * char_width;\n\n        return width;\n    }\n\n    hide() {\n        this.parent.style.opacity = 0;\n        this.parent.style.left = 0;\n        this.is_showing = false;\n    }\n}\n","import date_utils from './date_utils';\nimport { $, createSVG } from './svg_utils';\nimport Bar from './bar';\nimport Arrow from './arrow';\nimport Popup from './popup';\n\nimport './scheduler.scss';\n\nconst VIEW_MODE = {\n    HOUR: 'Hour',\n    QUARTER_DAY: 'Quarter Day',\n    HALF_DAY: 'Half Day',\n    DAY: 'Day',\n    WEEK: 'Week',\n    MONTH: 'Month',\n    YEAR: 'Year',\n};\n\nexport default class Scheduler {\n    constructor(wrapper, tasks, cells, options) {\n        this.setup_options(options);\n        this.setup_wrapper(wrapper);\n        this.setup_cells(cells);\n        this.setup_tasks(tasks);\n        this.setup_rows();\n        // initialize with default view mode\n        this.change_view_mode();\n        this.bind_events();\n    }\n\n    setup_wrapper(element) {\n        let svg_element, wrapper_element;\n\n        // CSS Selector is passed\n        if (typeof element === 'string') {\n            element = document.querySelector(element);\n        }\n\n        // get the SVGElement\n        if (element instanceof HTMLElement) {\n            wrapper_element = element;\n            svg_element = element.querySelector('svg');\n        } else if (element instanceof SVGElement) {\n            svg_element = element;\n        } else {\n            throw new TypeError(\n                'Scheduler only supports usage of a string CSS selector,' +\n                \" HTML DOM element or SVG DOM element for the 'element' parameter\"\n            );\n        }\n\n        // TODO da capire se da cambiare\n        // svg element\n        if (!svg_element) {\n            // create it\n            this.$svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'scheduler',\n                id: 'schedulerSvg'\n            });\n            this.$column_svg = createSVG('svg', {\n                append_to: wrapper_element,\n                class: 'scheduler',\n                id: 'columnSvg'\n            });\n        } else {\n            this.$svg = svg_element;\n            this.$svg.classList.add('scheduler');\n            this.$column_svg = svg_element;\n            this.$column_svg.classList.add('scheduler');\n        }\n\n        // TODO da rivedere questo giro di wrapper\n        // wrapper element\n        this.$container = document.createElement('div');\n        this.$container.classList.add('scheduler-grid-container');\n        this.$column_container = document.createElement('div');\n        this.$column_container.classList.add('scheduler-columns-container');\n\n        this.$container_parent = document.createElement('div');\n        this.$container_parent.classList.add('scheduler-container');\n        this.$container_parent.style.height = this.options.container_height + 'px';\n        this.$container_parent.appendChild(this.$column_container);\n        this.$container_parent.appendChild(this.$container);\n\n        const parent_element = this.$svg.parentElement;\n        parent_element.appendChild(this.$container_parent);\n        this.$column_container.appendChild(this.$column_svg);\n        this.$container.appendChild(this.$svg);\n\n        // popup wrapper\n        this.popup_wrapper = document.createElement('div');\n        this.popup_wrapper.classList.add('popup-wrapper');\n        this.$container_parent.appendChild(this.popup_wrapper);\n\n        $.on(this.popup_wrapper, 'mouseleave', '.popup-wrapper', (e) => {\n            this.hide_popup();\n        });\n    }\n\n    setup_options(options) {\n        const default_options = {\n            container_height: 300,\n            header_height: 50,\n            date_start: null,\n            date_end: null,\n            view_modes: [...Object.values(VIEW_MODE)],\n            bar_height: 20,\n            bar_corner_radius: 3,\n            arrow_curve: 5,\n            padding: 18,\n            view_mode: 'Day',\n            date_format: 'YYYY-MM-DD',\n            custom_popup_html: null,\n            language: 'it',\n            resize_left: false,\n            resize_right: false,\n            drag_drop_x: false,\n            drag_drop_y: false,\n            fixed_columns: [],\n            rows: [],\n            overlap: true,\n            moving_scroll_bar: true,\n            hide_fixed_columns: false,\n        };\n        this.options = Object.assign({}, default_options, options);\n\n        if (this.options.date_start)\n            this.options.date_start = date_utils.normalize_UTC(new Date(this.options.date_start));\n        if (this.options.date_end)\n            this.options.date_end = date_utils.normalize_UTC(new Date(this.options.date_end));\n    }\n\n    setup_cells(cells) {\n        this.cells = cells.filter(t => t.row && t.column);\n    }\n\n    setup_tasks(tasks) {\n        // prepare tasks\n        this.tasks = tasks.filter(t => t.row).map((task, i) => {\n            return this.setup_task(task);\n        }).filter(t => (\n            ((!this.options.date_start || t._end >= this.options.date_start) &&\n                (!this.options.date_end || t._start <= this.options.date_end) &&\n                (\n                    (t._start >= this.options.date_start && t._end <= this.options.date_end) ||  // Task within the range\n                    (t._start < this.options.date_start && t._end >= this.options.date_start) ||  // Task starts before but ends during or after date_start\n                    (t._start >= this.options.date_start && t._end > this.options.date_end)   // Task starts within the range but ends after date_end\n                ))\n        ));\n\n        this.setup_dependencies();\n    }\n\n    setup_task(task) {\n        let need_to_be_lock = false;\n        // convert to Date objects\n        task._start = date_utils.normalize_UTC(new Date(task.start));\n        task._end = date_utils.normalize_UTC(new Date(task.end));\n        if (this.options.date_end)\n            if (task._end > this.options.date_end)\n                need_to_be_lock = true;\n        if (this.options.date_start)\n            if (task._start < this.options.date_start)\n                need_to_be_lock = true;\n\n        // cache index\n        task._index = this.options.rows.indexOf(task.row);\n        if (task._index === -1) task._index = 0;\n\n        // invalid dates\n        if (!task.start && !task.end) {\n            const today = date_utils.today();\n            task._start = today;\n            task._end = date_utils.add(today, 2, 'day');\n        }\n\n        if (!task.start && task.end) {\n            task._start = date_utils.add(task._end, -2, 'day');\n        }\n\n        if (task.start && !task.end) {\n            task._end = date_utils.add(task._start, 2, 'day');\n        }\n\n        // if hours is not set, assume the last day is full day\n        // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n        const task_end_values = date_utils.get_date_values(task._end);\n        if (task_end_values.slice(3).every((d) => d === 0)) {\n            // task._end = date_utils.add(task._end, 24, 'hour');\n            task._end = date_utils.add(task._end, 23, 'hour');\n            task._end = date_utils.add(task._end, 59, 'minute');\n            task._end = date_utils.add(task._end, 59, 'second');\n        }\n\n        if (!need_to_be_lock) {\n            task.resize_left = (task.resize_left != null) ? task.resize_left : this.options.resize_left;\n            task.resize_right = (task.resize_right != null) ? task.resize_right : this.options.resize_right;\n            task.drag_drop_x = (task.drag_drop_x != null) ? task.drag_drop_x : this.options.drag_drop_x;\n            task.drag_drop_y = (task.drag_drop_y != null) ? task.drag_drop_y : this.options.drag_drop_y;\n        } else {\n            task.resize_left = false;\n            task.resize_right = false;\n            task.drag_drop_x = false;\n            task.drag_drop_y = false;\n        }\n        // invalid flag\n        if (!task.start || !task.end) {\n            task.invalid = true;\n        }\n\n        // dependencies\n        if (typeof task.dependencies === 'string' || !task.dependencies) {\n            let deps = [];\n            if (task.dependencies) {\n                deps = task.dependencies\n                    .split(',')\n                    .map((d) => d.trim())\n                    .filter((d) => d);\n            }\n            task.dependencies = deps;\n        }\n\n        // uids\n        if (!task.id) {\n            task.id = generate_id(task);\n        }\n        //description\n        if (!task.description)\n            task.description = '';\n\n        return task;\n    }\n\n    setup_dependencies() {\n        this.dependency_map = {};\n        for (let t of this.tasks) {\n            for (let d of t.dependencies) {\n                this.dependency_map[d] = this.dependency_map[d] || [];\n                this.dependency_map[d].push(t.id);\n            }\n        }\n    }\n\n    refresh(tasks = this.tasks, cells = this.cells, options = this.options) {\n        const scroll_pos = this.$svg.parentElement.scrollLeft;\n        const scroll_width = this.$svg.parentElement.scrollWidth;\n\n        this.setup_options(options);\n        this.setup_cells(cells);\n        this.setup_tasks(tasks);\n        this.setup_rows();\n        this.change_view_mode();\n\n        this.$svg.parentElement.scrollLeft = scroll_pos * (this.$svg.parentElement.scrollWidth / scroll_width);\n    }\n\n    setup_rows() {\n        this.rows = [];\n        let sum_y = (this.options.header_height + this.options.padding / 2);\n        this.options.rows.forEach(row_id => {\n            let row = { id: row_id, height: 0, y: 0, sub_level: [], cell_wrapper: [] };\n\n            if (this.options.overlap) {\n                row.sub_level = this.compute_row_sub_level(row_id);\n                row.height = this.compute_row_height(row.sub_level.length);\n            } else {\n                row.height = this.options.bar_height + this.options.padding;\n            }\n\n            for (let i = 0; i < this.options.fixed_columns.length; i++)\n                row.cell_wrapper[i] = {};\n\n            row.y += sum_y;\n            this.rows.push(row);\n            sum_y += row.height;\n        });\n    }\n\n    change_view_mode(mode = this.options.view_mode) {\n        this.update_view_scale(mode);\n        this.setup_dates();\n        this.render();\n        // fire viewmode_change event\n        this.trigger_event('view_change', [mode]);\n    }\n\n    update_view_scale(view_mode) {\n        this.options.view_mode = view_mode;\n        switch (this.options.view_mode) {\n            case VIEW_MODE.HOUR:\n                this.options.step = 60;\n                this.options.column_width = 60;\n                break;\n            case VIEW_MODE.QUARTER_DAY:\n                this.options.step = 24 / 4;\n                this.options.column_width = 24 * 2;\n                break;\n            case VIEW_MODE.HALF_DAY:\n                this.options.step = 24 / 2;\n                this.options.column_width = 24 * 2;\n                break;\n            case VIEW_MODE.DAY:\n                this.options.step = 24;\n                this.options.column_width = 24 * 2;\n                break;\n            case VIEW_MODE.WEEK:\n                this.options.step = 24 * 7;\n                this.options.column_width = this.options.step;\n                break;\n            case VIEW_MODE.MONTH:\n                this.options.step = 24 * 30;\n                this.options.column_width = 150;\n                break;\n            case VIEW_MODE.YEAR:\n                this.options.step = 24 * 365;\n                this.options.column_width = 120;\n                break;\n        }\n    }\n\n    setup_dates() {\n        this.setup_scheduler_dates();\n        this.setup_date_values();\n    }\n\n    setup_scheduler_dates() {\n        this.scheduler_start = this.options.date_start\n        this.scheduler_end = this.options.date_end;\n\n        if (!this.scheduler_start || !this.scheduler_end)\n            for (let task of this.tasks) {\n                // set global start and end date\n                if (!this.scheduler_start || task._start < this.scheduler_start) {\n                    this.scheduler_start = date_utils.clone(task._start);\n                }\n                if (!this.scheduler_end || task._end > this.scheduler_end) {\n                    this.scheduler_end = date_utils.clone(task._end);\n                }\n            }\n\n        this.scheduler_start.setUTCHours(0, 0, 0, 0);\n        this.scheduler_end.setUTCHours(0, 0, 0, 0);\n\n        // add date padding on both sides\n        if (!this.options.date_start) {\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n                this.scheduler_start = date_utils.add(this.scheduler_start, -7, 'day');\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'year');\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\n                this.scheduler_start = date_utils.add(this.scheduler_start, -2, 'year');\n            } else {\n                this.scheduler_start = date_utils.add(this.scheduler_start, -1, 'month');\n            }\n        } else {\n            if (this.view_is(VIEW_MODE.WEEK)) {\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'week');\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'month');\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'year');\n            }\n        }\n\n        if (!this.options.date_end) {\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n                this.scheduler_end = date_utils.add(this.scheduler_end, 7, 'day');\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'year');\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\n                this.scheduler_end = date_utils.add(this.scheduler_end, 2, 'year');\n            } else {\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'month');\n            }\n        }\n    }\n\n    setup_date_values() {\n        this.dates = [];\n        let cur_date = date_utils.clone(this.scheduler_start);\n\n        while (cur_date <= this.scheduler_end) {\n            this.dates.push(cur_date);\n            switch (this.options.view_mode) {\n                case VIEW_MODE.YEAR:\n                    cur_date = date_utils.add(cur_date, 1, 'year');\n                    break;\n                case VIEW_MODE.MONTH:\n                    cur_date = date_utils.add(cur_date, 1, 'month');\n                    break;\n                case VIEW_MODE.WEEK:\n                    cur_date = date_utils.add(cur_date, 7, 'day');\n                    break;\n                case VIEW_MODE.HOUR:\n                    cur_date = date_utils.add(cur_date, 1, 'hour');\n                    break;\n                default:\n                    cur_date = date_utils.add(cur_date, this.options.step, 'hour');\n                    break;\n            }\n        }\n    }\n\n    bind_events() {\n        this.bind_grid_events();\n        this.bind_cell_events();\n        this.bind_bar_events();\n    }\n\n    render() {\n        this.clear();\n        this.setup_layers();\n        this.make_fixed_columns();\n        this.make_grid();\n        this.make_dates();\n        this.make_bars();\n        this.make_arrows();\n        this.map_arrows_on_bars();\n        this.set_width();\n        this.set_scroll_position();\n        if (!this.options.overlap)\n            this.red_border();\n    }\n\n    setup_layers() {\n        this.layers = {};\n        this.fixed_col_layers = {};\n        const layers = ['grid', 'arrow', 'progress', 'bar', 'details', 'date'];\n        const fixed_col_layers = ['grid', 'cell', 'header'];\n        // make group layers\n        for (let layer of layers) {\n            this.layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$svg,\n            });\n        }\n        for (let layer of fixed_col_layers) {\n            this.fixed_col_layers[layer] = createSVG('g', {\n                class: layer,\n                append_to: this.$column_svg\n            });\n        }\n    }\n\n    // TODO refactor with single functions?\n    make_fixed_columns() {\n        const column_grid_width = this.options.fixed_columns.reduce((acc, curr) => acc + curr.width, 0);\n        if (this.options.hide_fixed_columns || column_grid_width === 0) {\n            this.$column_svg.setAttribute('width', 0);\n            return;\n        }\n        // make_grid_background\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\n        const grid_height = sum_rows_height;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: column_grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.fixed_col_layers.grid\n        });\n        $.attr(this.$column_svg, {\n            height: grid_height,\n            width: column_grid_width,\n        });\n\n        // make_grid_rows // praticamente è identica, cambia solo il layer e la width\n        const rows_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\n\n        let i = 0;\n\n        for (let row of this.options.rows) {\n\n            const row_height = this.rows[i].height;\n            const row_y = this.rows[i].y;\n            const rect = createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: column_grid_width,\n                height: row_height,\n                class: 'grid-row',\n                'data-id': row,\n                append_to: rows_layer,\n            });\n\n            this.rows[i].fixed_rect = rect;\n\n            const fixed_line = createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: column_grid_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            this.rows[i].fixed_line = fixed_line;\n\n            i++;\n        }\n\n        // make_grid_header\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: column_grid_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.fixed_col_layers.header\n        });\n\n        // make_dates -> header\n        const pos_y = this.options.header_height;\n        let pos_x = 0;\n        for (let column of this.options.fixed_columns) {\n            const max_width = column.width;\n            if (max_width === 0) continue;\n            let text_content = column.header;\n            const text_width = text_content.length * 7;\n\n            if (text_width > max_width) {\n                const reduction_percentage = (text_width - max_width) / text_width;\n                const visible_characters = Math.max(0, Math.round(text_content.length * (1 - reduction_percentage))) - 1;\n                text_content = text_content.substring(0, visible_characters);\n            }\n            pos_x += column.width / 2;\n            createSVG('text', {\n                x: pos_x,\n                y: pos_y,\n                value: column.header,\n                innerHTML: text_content,\n                class: 'lower-text bold',\n                append_to: this.fixed_col_layers.header\n            });\n            pos_x += column.width / 2;\n\n            createSVG('path', {\n                d: `M ${pos_x - 2} ${0} v ${this.options.header_height + (this.options.padding / 2)}`,\n                class: 'header-tick',\n                append_to: this.fixed_col_layers.header,\n            });\n\n            // make_grid_ticks\n            let tick_y = 0;\n            let tick_height = sum_rows_height;\n            createSVG('path', {\n                d: `M ${pos_x} ${tick_y} v ${tick_height}`,\n                class: 'tick thick',\n                append_to: this.fixed_col_layers.grid,\n            });\n        }\n\n        // make_bars\n        this.make_cells();\n    }\n\n    make_cells() {\n        for (let row of this.rows) {\n            const row_height = row.height;\n            const row_y = row.y;\n            let pos_x = 0;\n            let c = 0;\n            for (let column of this.options.fixed_columns) {\n                if (column.width === 0) continue;\n                const cell_wrapper = createSVG('g', {\n                    class: 'cell-wrapper',\n                    'data-row-id': row.id,\n                    'data-col-id': column.id,\n                    append_to: this.fixed_col_layers.cell,\n                });\n\n                const fixed_cell = createSVG('rect', {\n                    x: pos_x,\n                    y: row_y,\n                    width: column.width,\n                    height: row_height,\n                    append_to: cell_wrapper,\n                });\n                row.cell_wrapper[c].fixed_cell = fixed_cell;\n\n\n                const cell = this.cells.find(t => t.row === row.id && t.column === column.id);\n                if (cell) {\n\n                    const max_width = column.width;\n                    let text_content = cell.value;\n                    const text_width = text_content.length * 7;\n                    let tooltip = '';\n                    if (cell.tooltip)\n                        tooltip = cell.tooltip;\n\n                    if (text_width > max_width) {\n                        const reduction_percentage = (text_width - max_width) / text_width;\n                        const visible_characters = Math.max(0, Math.round(text_content.length * (1 - reduction_percentage))) - 1;\n                        text_content = text_content.substring(0, visible_characters);\n                    }\n                    const text = createSVG('text', {\n                        x: (column.width / 2) + pos_x,\n                        y: 24 + row_y,\n                        innerHTML: text_content,\n                        value: String(cell.value),\n                        tooltip: tooltip,\n                        class: 'lower-text',\n                        append_to: cell_wrapper\n                    });\n                    row.cell_wrapper[c].text = text;\n                }\n                pos_x += column.width;\n                c++;\n\n                $.on(cell_wrapper, 'mouseleave', (e) => {\n                    if (e.relatedTarget != null &&\n                        (e.relatedTarget.classList.contains('pointer') ||\n                            e.relatedTarget.classList.contains('title')))\n                        return;\n                    this.hide_popup();\n                });\n            }\n        }\n    }\n\n    make_grid() {\n        this.make_grid_background();\n        this.make_grid_rows();\n        this.make_grid_header();\n        this.make_grid_ticks();\n        this.make_grid_highlights();\n    }\n\n    make_grid_background() {\n        let grid_width;\n        if (this.view_is(VIEW_MODE.WEEK) || this.view_is(VIEW_MODE.MONTH) || this.view_is(VIEW_MODE.YEAR)) {\n            grid_width = (this.dates.length - 1) * this.options.column_width;\n        } else\n            grid_width = this.dates.length * this.options.column_width;\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\n        const grid_height = sum_rows_height;\n\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: grid_width,\n            height: grid_height,\n            class: 'grid-background',\n            append_to: this.layers.grid,\n        });\n\n        $.attr(this.$svg, {\n            height: grid_height,\n            width: '100%',\n        });\n    }\n\n    make_grid_rows() {\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\n\n        const row_width = this.dates.length * this.options.column_width;\n\n        let i = 0;\n\n        for (let row of this.options.rows) {\n            const row_height = this.rows[i].height;\n            const row_y = this.rows[i].y;\n\n            const rect = createSVG('rect', {\n                x: 0,\n                y: row_y,\n                width: row_width,\n                height: row_height,\n                class: 'grid-row',\n                'data-id': row,\n                append_to: rows_layer,\n            });\n\n            this.rows[i].rect = rect;\n\n            const line = createSVG('line', {\n                x1: 0,\n                y1: row_y + row_height,\n                x2: row_width,\n                y2: row_y + row_height,\n                class: 'row-line',\n                append_to: lines_layer,\n            });\n\n            this.rows[i].line = line;\n\n            i++;\n        }\n    }\n\n    make_grid_header() {\n        const header_width = this.dates.length * this.options.column_width;\n        const header_height = this.options.header_height + 10;\n        createSVG('rect', {\n            x: 0,\n            y: 0,\n            width: header_width,\n            height: header_height,\n            class: 'grid-header',\n            append_to: this.layers.date,\n        });\n    }\n\n    make_grid_ticks() {\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\n        let tick_x = 0;\n        let tick_y = 0;\n        let tick_height = sum_rows_height;\n\n        for (let date of this.dates) {\n            let tick_class = 'tick';\n            // thick tick for monday\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n                tick_class += ' thick';\n            }\n            // thick tick for first week\n            if (\n                this.view_is(VIEW_MODE.WEEK) &&\n                date.getDate() >= 1 &&\n                date.getDate() < 8\n            ) {\n                tick_class += ' thick';\n            }\n            // thick ticks for quarters\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n                tick_class += ' thick';\n            }\n\n            createSVG('path', {\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n                class: tick_class,\n                append_to: this.layers.grid,\n            });\n\n            if (this.view_is(VIEW_MODE.MONTH)) {\n                tick_x +=\n                    (date_utils.get_days_in_month(date) *\n                        this.options.column_width) /\n                    30;\n            } else {\n                tick_x += this.options.column_width;\n            }\n        }\n    }\n\n    make_grid_highlights() {\n        const today = date_utils.today();\n        let x = Math.round(date_utils.diff(today, this.dates[0], 'hour') /\n            this.options.step) * this.options.column_width;\n        let width = this.options.column_width;\n\n        switch (this.options.view_mode) {\n            case VIEW_MODE.HOUR:\n                x = date_utils.diff(today, this.dates[0], 'minute') /\n                    this.options.step * this.options.column_width;\n                if (today.getTimezoneOffset() === -60)\n                    x += this.options.column_width;\n                else\n                    x += (this.options.column_width * 2);\n                width *= 24;\n                break;\n            case VIEW_MODE.HALF_DAY:\n                width *= 2;\n                break;\n            case VIEW_MODE.QUARTER_DAY:\n                width *= 4;\n                break;\n            case VIEW_MODE.WEEK:\n                const day_of_week = today.getDay(); // 0 = Domenica, 1 = Lunedì, ..., 6 = Sabato\n                const start_of_week = new Date(today);\n                start_of_week.setDate(today.getDate() - (day_of_week === 0 ? 6 : day_of_week - 1)); // Sposta indietro al lunedì\n                x = Math.round(date_utils.diff(start_of_week, this.dates[0], 'hour') /\n                    this.options.step) * this.options.column_width;\n                break;\n            case VIEW_MODE.MONTH:\n                const start_of_month = date_utils.start_of(today, 'month');\n                x = date_utils.diff(start_of_month, this.dates[0], 'hour') /\n                    this.options.step * this.options.column_width;\n                width = (date_utils.get_days_in_month(today) *\n                    this.options.column_width) /\n                    30;\n                break;\n            case VIEW_MODE.YEAR:\n                const start_of_year = date_utils.start_of(today, 'year');\n                const starting_year = date_utils.start_of(this.scheduler_start, 'year');\n                x = date_utils.diff(start_of_year, starting_year, 'hour') /\n                    this.options.step * this.options.column_width;\n                break;\n            default:\n                break;\n        }\n\n        const y = this.options.header_height + this.options.padding / 2;\n        const height = this.rows[this.rows.length - 1].y +\n            this.rows[this.rows.length - 1].height - y;\n        createSVG('rect', {\n            x,\n            y,\n            width,\n            height,\n            class: 'today-highlight',\n            append_to: this.layers.grid,\n        });\n    }\n\n    make_dates() {\n        let last_date_info = null;\n\n        this.dates.map((date) => {\n            const d = this.get_date_info(date, last_date_info);\n            last_date_info = d;\n            createSVG('text', {\n                x: d.lower_x,\n                y: d.lower_y,\n                innerHTML: d.lower_text,\n                class: 'lower-text bold',\n                append_to: this.layers.date,\n            });\n\n            if ((d.date.getDay() === 6 || d.date.getDay() === 0) &&\n                (this.options.view_mode === VIEW_MODE.DAY ||\n                    this.options.view_mode === VIEW_MODE.HALF_DAY ||\n                    this.options.view_mode === VIEW_MODE.QUARTER_DAY ||\n                    this.options.view_mode === VIEW_MODE.HOUR)) {\n\n                let highlight_x;\n                const highlight_y = d.lower_y + (this.options.padding / 2);\n                let highlight_width = this.options.column_width;\n                const highlight_height = this.rows[this.rows.length - 1].y +\n                    this.rows[this.rows.length - 1].height -\n                    this.options.header_height -\n                    (this.options.padding / 2);\n\n                if (this.view_is(VIEW_MODE.DAY))\n                    highlight_x = d.lower_x - (this.options.column_width / 2);\n                else if (this.view_is(VIEW_MODE.HOUR))\n                    if (d.date.getTimezoneOffset() === -60)\n                        highlight_x = d.lower_x + this.options.column_width;\n                    else\n                        highlight_x = d.lower_x + (this.options.column_width * 2);\n                else\n                    highlight_x = d.lower_x;\n\n                createSVG('rect', {\n                    x: highlight_x,\n                    y: highlight_y,\n                    width: highlight_width,\n                    height: highlight_height,\n                    class: 'weekend-highlight',\n                    append_to: this.layers.grid,\n                });\n            }\n            if (d.upper_text) {\n                createSVG('text', {\n                    x: d.upper_x,\n                    y: d.upper_y,\n                    innerHTML: d.upper_text,\n                    class: 'upper-text bold',\n                    append_to: this.layers.date,\n                });\n            }\n            return d;\n        });\n    }\n\n    get_date_info(date, last_date_info) {\n        let column_width = this.options.column_width;\n        let x_pos;\n        let hour_pointer;\n        let date_text;\n        const hour = [\n            '00', '01', '02', '03', '04', '05', '06', '07', '08', '09',\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',\n            '20', '21', '22', '23'\n        ];\n        let last_date = null;\n        if (last_date_info) {\n            last_date = last_date_info.date;\n        } else {\n            last_date = date_utils.add(date, 1, 'year');\n            last_date = date_utils.add(last_date, 1, 'month');\n            last_date = date_utils.add(last_date, 1, 'day');\n        }\n        if (this.view_is(VIEW_MODE.DAY)) {\n            date_text = {\n                Day_lower:\n                    date.getDate() !== last_date.getDate()\n                        ? date_utils.format(date, 'D dd', this.options.language)\n                        : '',\n                Day_upper:\n                    date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(date, 'MMM YYYY', this.options.language)\n                        : '',\n            };\n            x_pos = {\n                Day_lower: column_width / 2,\n                Day_upper: (column_width * 30) / 2\n            };\n        } else if (this.view_is(VIEW_MODE.HOUR)) {\n            hour_pointer = last_date_info?.hour_pointer || 0;\n            date_text = {\n                Hour_lower: hour[hour_pointer],\n                Hour_upper:\n                    hour_pointer === 0\n                        ? date_utils.format(date, 'ddd D MMM YYYY', this.options.language)\n                        : '',\n            };\n            hour_pointer = (hour_pointer < 23) ? hour_pointer + 1 : 0;\n            x_pos = {\n                Hour_lower: 0,\n                Hour_upper: column_width * 24 / 2\n            };\n        } else if (this.view_is(VIEW_MODE.WEEK)) {\n            date_text = {\n                Week_lower:\n                    date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(date, 'D MMM', this.options.language)\n                        : date_utils.format(date, 'D', this.options.language),\n                Week_upper:\n                    date.getMonth() !== last_date.getMonth()\n                        ? date_utils.format(date, 'MMM YYYY', this.options.language)\n                        : '',\n            };\n            x_pos = {\n                Week_lower: 0,\n                Week_upper: (column_width * 4) / 2\n            };\n        } else if (this.view_is(VIEW_MODE.QUARTER_DAY)) {\n            hour_pointer = last_date_info?.hour_pointer || 0;\n            date_text = {\n                'Quarter Day_lower': hour[hour_pointer],\n                'Quarter Day_upper':\n                    hour_pointer === 0\n                        ? date_utils.format(date, 'ddd D MMM YYYY', this.options.language)\n                        : '',\n            };\n            hour_pointer = (hour_pointer < 18) ? hour_pointer + 6 : 0;\n            x_pos = {\n                'Quarter Day_lower': 0,\n                'Quarter Day_upper': column_width + (column_width / 2)\n            };\n        } else if (this.view_is(VIEW_MODE.HALF_DAY)) {\n            hour_pointer = last_date_info?.hour_pointer || 0;\n            date_text = {\n                'Half Day_lower': hour[hour_pointer],\n                'Half Day_upper':\n                    hour_pointer === 0\n                        ? date.getMonth() !== last_date.getMonth()\n                            ? date_utils.format(date, 'D dd MMM', this.options.language)\n                            : date_utils.format(date, 'D dd MM YYY', this.options.language)\n                        : '',\n            };\n            hour_pointer = (hour_pointer < 12) ? hour_pointer + 12 : 0;\n            x_pos = {\n                'Half Day_lower': 0,\n                'Half Day_upper': column_width\n            };\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n            date_text = {\n                Month_lower: date_utils.format(date, 'MMM YYYY', this.options.language),\n                Month_upper:\n                    date.getFullYear() !== last_date.getFullYear()\n                        ? date_utils.format(date, 'YYYY', this.options.language)\n                        : '',\n            };\n            column_width =\n                (date_utils.get_days_in_month(date) * column_width) / 30;\n            x_pos = {\n                Month_lower: column_width / 2,\n                Month_upper: (column_width * 12) / 2\n            };\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\n            date_text = {\n                Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n                Year_upper:\n                    date.getFullYear() !== last_date.getFullYear()\n                        ? date_utils.format(date, 'YYYY', this.options.language)\n                        : '',\n            };\n            x_pos = {\n                Year_lower: column_width / 2,\n                Year_upper: (column_width * 30) / 2\n            };\n        };\n\n        const base_pos = {\n            x: last_date_info\n                ? last_date_info.base_pos_x + last_date_info.column_width\n                : 0,\n            lower_y: this.options.header_height,\n            upper_y: this.options.header_height - 25,\n        };\n\n        return {\n            date,\n            column_width,\n            base_pos_x: base_pos.x,\n            upper_text: date_text[`${this.options.view_mode}_upper`],\n            lower_text: date_text[`${this.options.view_mode}_lower`],\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n            upper_y: base_pos.upper_y,\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n            lower_y: base_pos.lower_y,\n            hour_pointer,\n        };\n    }\n\n    make_bars() {\n        this.bars = this.tasks.map((task) => {\n            const bar = new Bar(this, task);\n            this.layers.bar.appendChild(bar.group);\n            return bar;\n        });\n    }\n\n    make_arrows() {\n        this.arrows = [];\n        for (let task of this.tasks) {\n            let arrows = [];\n            arrows = task.dependencies\n                .map((task_id) => {\n                    const dependency = this.get_task(task_id);\n                    if (!dependency) return;\n                    const arrow = new Arrow(\n                        this,\n                        this.get_bar(dependency.id), // from_task\n                        this.get_bar(task.id) // to_task\n                    );\n                    this.layers.arrow.appendChild(arrow.element);\n                    return arrow;\n                })\n                .filter(Boolean); // filter falsy values\n            this.arrows = this.arrows.concat(arrows);\n        }\n    }\n\n    map_arrows_on_bars() {\n        for (let bar of this.bars) {\n            bar.arrows = this.arrows.filter((arrow) => {\n                return (\n                    arrow.from_task.task.id === bar.task.id ||\n                    arrow.to_task.task.id === bar.task.id\n                );\n            });\n        }\n    }\n\n    set_width() {\n        const actual_width = this.$svg\n            .querySelector('.grid .grid-row')\n            .getAttribute('width');\n        this.$svg.setAttribute('width', actual_width);\n    }\n\n    set_scroll_position() {\n        const parent_element = this.$svg.parentElement;\n        if (!parent_element) return;\n\n        const hours_before_today = date_utils.diff(\n            date_utils.today(),\n            this.scheduler_start,\n            'hour'\n        );\n\n        const scroll_pos =\n            (hours_before_today / this.options.step) *\n            this.options.column_width -\n            this.options.column_width;\n\n        parent_element.scrollLeft = scroll_pos;\n    }\n\n    bind_grid_events() {\n        const scroll = this.$svg.parentElement;\n        let is_dragging = false;\n        let start_x;\n        let scroll_left;\n        let x = 0;\n        let is_resizing = false;\n        let header_tick = null;\n\n        $.on(this.$svg, 'mousedown', '.grid-header, .lower-text, .upper-text', (e) => {\n            is_dragging = true;\n            start_x = e.pageX;\n            scroll_left = scroll.scrollLeft;\n        });\n\n        $.on(this.$container_parent, 'mousemove', '.grid-row, .grid-header, .lower-text, .upper-text, .weekend-highlight', (e) => {\n            if (is_dragging) {\n                const x = e.pageX;\n                const walk = x - start_x;\n                scroll.scrollLeft = scroll_left - walk;\n            }\n        });\n\n        $.on(document, 'mouseup', () => {\n            if (is_dragging)\n                is_dragging = false;\n\n            if (is_resizing) {\n                is_resizing = false;\n                header_tick = null;\n            }\n        });\n\n        $.on(this.$container_parent, 'mouseleave', () => {\n            if (is_dragging)\n                is_dragging = false;\n\n            if (is_resizing) {\n                is_resizing = false;\n                header_tick = null;\n            }\n        });\n\n        $.on(this.$svg, 'click', '.grid-row', (e) => {\n            if (e.target.classList.contains('grid-row')) {\n                const row = $.closest('.grid-row', e.target);\n                const data_id = row.getAttribute('data-id');\n                const cells = this.$column_svg.querySelectorAll('g.cell > g.cell-wrapper[data-row-id=\"' + data_id + '\"]');\n                const is_currently_selected = row.classList.contains('selected-row');\n\n                this.unselect_all();\n                this.hide_popup();\n                if (!is_currently_selected) {\n                    row.classList.add('selected-row');\n                    cells.forEach(cell => {\n                        cell.classList.add('selected-row');\n                    });\n                }\n\n                this.trigger_event('row_select', [data_id]);\n            }\n        });\n\n        $.on(this.$svg, 'dblclick', '.grid-row, .weekend-highlight, .today-highlight', (e) => {\n            let data_id;\n            if (e.target.classList.contains('weekend-highlight') || e.target.classList.contains('today-highlight')) {\n                let prev_y = 0;\n                this.rows.forEach(row => {\n                    if (e.offsetY >= prev_y && e.offsetY < row.y)\n                        return;\n                    data_id = row.id;\n                    prev_y = row.y;\n                })\n            } else\n                data_id = e.target.getAttribute('data-id');\n\n            const x_in_units = e.offsetX / this.options.column_width;\n            let datetime;\n            if (this.view_is('Hour'))\n                datetime = date_utils.add(\n                    this.scheduler_start,\n                    x_in_units * this.options.step,\n                    'minute');\n            else\n                datetime = date_utils.add(\n                    this.scheduler_start,\n                    x_in_units * this.options.step,\n                    'hour');\n\n            this.trigger_event('grid_dblclick', [data_id, date_utils.to_local(datetime)]);\n        });\n\n        $.on(this.$container, 'scroll', e => {\n            this.$column_container.scrollTop = e.currentTarget.scrollTop;\n            this.layers.date.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\n            this.fixed_col_layers.header.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\n        });\n\n        $.on(this.$column_container, 'scroll', e => {\n            this.$container.scrollTop = e.currentTarget.scrollTop;\n        });\n\n        $.on(this.$column_svg, 'mousedown', '.header-tick', (e) => {\n            is_resizing = true;\n            x = e.clientX;\n            header_tick = e.target;\n        });\n\n        $.on(this.$container_parent, 'mousemove', '.header-tick, .grid-header', (e) => {\n            if (is_resizing) {\n                const delta_x = e.clientX - x;\n                x = e.clientX;\n                let cell_x;\n                let cell_width;\n                let max_width;\n                let text_pos_x;\n                let need_to_resize = true;\n                let d_attr = header_tick.getAttribute('d');\n                const tick_x = parseInt(d_attr.split(' ')[1]);\n                //cell-wrapper\n                const cells = this.$column_svg.querySelectorAll('g.cell-wrapper > *');\n                for (let i = 0; i < cells.length; i++) {\n                    const cell = cells[i];\n                    if (cell.tagName === 'rect') {\n                        cell_x = parseInt(cell.getAttribute('x'));\n                        cell_width = cell.getBBox().width;\n                        if (cell_x < tick_x && (cell_width + cell_x) > tick_x) {\n                            max_width = cell_width + delta_x;\n                            if (max_width < 50) { //impostata larghezza minima\n                                need_to_resize = false;\n                                break;\n                            }\n                            $.attr(cell, 'width', max_width);\n                            text_pos_x = tick_x + 2 + cell_x;\n                        } else if (cell_x > tick_x) {\n                            $.attr(cell, 'x', cell_x + delta_x);\n                        }\n                    } else {\n                        if (cell_x < tick_x && (cell_width + cell_x) > tick_x) {\n                            let text_content = cell.getAttribute('value');\n                            const text_width = text_content.length * 7;\n                            if (text_width > max_width) {\n                                const reduction_percentage = (text_width - max_width) / text_width;\n                                const visible_characters = Math.max(0, Math.round(text_content.length * (1 - reduction_percentage))) - 1;\n                                cell.textContent = text_content.substring(0, visible_characters);\n                            } else {\n                                const expansion_percentage = (max_width - text_width) / text_content.length;\n                                const visible_characters = Math.min(text_content.length, Math.round(text_content.length * (1 + expansion_percentage)));\n                                cell.textContent = text_content.substring(0, visible_characters);\n                            }\n                            $.attr(cell, 'x', text_pos_x / 2);\n                        } else if (cell_x > tick_x) {\n                            const text_x = parseInt(cell.getAttribute('x'));\n                            $.attr(cell, 'x', text_x + delta_x);\n                        }\n                    }\n                }\n\n                if (need_to_resize) {\n                    //tick\n                    let new_d_attr = d_attr.replace(/M\\s*\\d+/, `M ${tick_x + delta_x}`);\n                    $.attr(header_tick, 'd', new_d_attr);\n\n                    //other tick\n                    const header_ticks = this.$column_svg.querySelectorAll('g.header > path');\n                    header_ticks.forEach(tick => {\n                        if (tick !== header_tick) {\n                            const d_attr = tick.getAttribute('d');\n                            const M_value = parseInt(d_attr.split(' ')[1]);\n                            if (tick_x < M_value) {\n                                let new_d_attr = d_attr.replace(/M\\s*\\d+/, `M ${M_value + delta_x}`);\n                                $.attr(tick, 'd', new_d_attr);\n                            }\n                        }\n                    });\n\n                    //background\n                    const current_width = parseInt(this.$column_svg.getAttribute('width'));\n                    const new_width = current_width + delta_x;\n                    $.attr(this.$column_svg, 'width', new_width);\n\n                    //header\n                    $.attr(this.$column_svg.querySelector('g.header > rect.grid-header'), 'width', new_width);\n                    //header text\n                    const header_text = this.$column_svg.querySelectorAll('g.header > text.lower-text.bold');\n                    const text_to_resize = header_tick.previousSibling;\n                    header_text.forEach(text => {\n                        const text_x = parseFloat(text.getAttribute('x'));\n\n                        if (text === text_to_resize) {\n                            const left_tick = (text_x * 2) - tick_x - 2;\n                            const max_width = tick_x - Math.abs(left_tick) + delta_x;\n                            const text_content = text.textContent;\n                            const original_text = text.getAttribute('value');\n                            const text_width = text_content.length * 7;\n                            if (text_width > max_width) {\n                                const reduction_percentage = (text_width - max_width) / text_width;\n                                const visible_characters = Math.max(0, Math.round(text_content.length * (1 - reduction_percentage))) - 1;\n                                text.textContent = text_content.substring(0, visible_characters);\n                            } else {\n                                const expansion_percentage = (max_width - text_width) / (original_text.length * 7);\n                                const visible_characters = Math.min(original_text.length, Math.round(text_content.length * (1 + expansion_percentage)));\n                                text.textContent = original_text.substring(0, visible_characters);\n                            }\n                            $.attr(text, 'x', text_pos_x / 2);\n                        }\n\n                        if (text_x > tick_x)\n                            $.attr(text, 'x', text_x + delta_x);\n                    });\n                    //ticks under the header\n                    const ticks = this.$column_svg.querySelectorAll('g.grid > path');\n                    ticks.forEach(tick => {\n                        const d_attr = tick.getAttribute('d');\n                        const M_value = parseInt(d_attr.split(' ')[1]);\n                        if (tick_x < M_value) {\n                            let new_d_attr = d_attr.replace(/M\\s*\\d+/, `M ${M_value + delta_x}`);\n                            $.attr(tick, 'd', new_d_attr);\n                        }\n                    });\n\n                    //row\n                    const fixed_grid_rows = this.$column_svg.querySelectorAll('g.grid > g > rect.grid-row');\n                    fixed_grid_rows.forEach(row => {\n                        $.attr(row, 'width', new_width);\n                    });\n                }\n            }\n        });\n\n        $.on(this.$container, 'wheel', '.grid, .bar', (e) => {\n            this.hide_popup();\n            e.preventDefault();\n\n            const VIEW_MODES_ORDER = [\n                VIEW_MODE.HOUR,\n                VIEW_MODE.QUARTER_DAY,\n                VIEW_MODE.HALF_DAY,\n                VIEW_MODE.DAY,\n                VIEW_MODE.WEEK,\n                VIEW_MODE.MONTH,\n                VIEW_MODE.YEAR,\n            ];\n\n            let curr_index = VIEW_MODES_ORDER.indexOf(this.options.view_mode);\n            const scroll_pos = this.$svg.parentElement.scrollLeft;\n            const scroll_width = this.$svg.parentElement.scrollWidth;\n\n            if (e.deltaY > 0 && curr_index !== VIEW_MODES_ORDER.length - 1) {\n                this.change_view_mode(VIEW_MODES_ORDER[curr_index + 1]);\n            } else if (e.deltaY < 0 && curr_index > 0) {\n                this.change_view_mode(VIEW_MODES_ORDER[curr_index - 1]);\n            }\n\n            this.$svg.parentElement.scrollLeft = scroll_pos * (this.$svg.parentElement.scrollWidth / scroll_width);\n        });\n    }\n\n    bind_cell_events() {\n        $.on(this.$column_svg, 'mouseover', '.cell-wrapper > text', (e) => {\n            const cell = $.closest('.cell-wrapper > text', e.target);\n            const cell_tooltip = cell.getAttribute('tooltip');\n            const cell_value = cell.getAttribute('value');\n            if (cell_value !== cell.innerHTML || (\n                cell_tooltip && cell_tooltip !== cell_value))\n                this.show_cell_popup(cell, cell_value, cell_tooltip, e);\n        });\n\n        $.on(this.$column_svg, 'dblclick', '.cell-wrapper', (e) => {\n            const cell_wrapper = $.closest('.cell-wrapper', e.target);\n            const data_row_id = cell_wrapper.getAttribute('data-row-id');\n            const data_col_id = cell_wrapper.getAttribute('data-col-id');\n            this.trigger_event('cell_dblclick', [data_row_id, data_col_id]);\n        });\n\n        $.on(this.$column_svg, 'click', '.cell-wrapper', (e) => {\n            const cell_wrapper = $.closest('.cell-wrapper', e.target);\n            const data_row_id = cell_wrapper.getAttribute('data-row-id');\n            const cells = this.$column_svg.querySelectorAll('g.cell > g.cell-wrapper[data-row-id=\"' + data_row_id + '\"]');\n            const row = this.$container.querySelector('g.grid > g > rect[data-id=\"' + data_row_id + '\"]');\n            const is_currently_selected = row.classList.contains('selected-row');\n\n            this.unselect_all();\n            this.hide_popup();\n\n            if (!is_currently_selected) {\n                row.classList.add('selected-row');\n                cells.forEach(cell => {\n                    cell.classList.add('selected-row');\n                });\n            }\n\n            this.trigger_event('row_select', [data_row_id]);\n        });\n    }\n\n    bind_bar_events() {\n        let is_dragging = false;\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing_left = false;\n        let is_resizing_right = false;\n        let parent_bar_id = null;\n        let bars = []; // instanceof Bars, the dragged bar and its children\n        let max_y = 0;\n        const min_y = this.options.header_height + (this.options.padding / 2);\n        this.bar_being_dragged = null; // instanceof dragged bar\n\n        function action_in_progress() {\n            return is_dragging || is_resizing_left || is_resizing_right;\n        }\n\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n            const bar_wrapper = $.closest('.bar-wrapper', element);\n\n            if (element.classList.contains('left')) {\n                is_resizing_left = true;\n            } else if (element.classList.contains('right')) {\n                is_resizing_right = true;\n            } else if (element.classList.contains('bar-wrapper')) {\n                is_dragging = true;\n            }\n\n            bar_wrapper.classList.add('active');\n\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\n            const ids = [\n                parent_bar_id,\n                ...this.get_all_dependent_tasks(parent_bar_id),\n            ];\n            bars = ids.map((id) => {\n                const bar = this.get_bar(id);\n                if (parent_bar_id === id) {\n                    this.bar_being_dragged = bar;\n                }\n                const $bar = bar.$bar;\n                $bar.ox = $bar.getX();\n                $bar.oy = $bar.getY();\n                $bar.owidth = $bar.getWidth();\n                $bar.finaldx = 0;\n                $bar.finaldy = 0;\n                return bar;\n            });\n\n            is_resizing_left = is_resizing_left && this.bar_being_dragged.task.resize_left;\n            is_resizing_right = is_resizing_right && this.bar_being_dragged.task.resize_right;\n            is_dragging = is_dragging && (this.bar_being_dragged.task.drag_drop_x || this.bar_being_dragged.task.drag_drop_y);\n            max_y = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height - this.options.bar_height - (this.options.padding / 2);\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!action_in_progress()) return;\n            const dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            this.hide_popup();\n\n            // update the dragged bar\n            const bar_being_dragged = this.bar_being_dragged;\n            if (is_resizing_left) {\n                bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\n                bar_being_dragged.update_bar_position({\n                    x:\n                        bar_being_dragged.$bar.ox +\n                        bar_being_dragged.$bar.finaldx,\n                    width:\n                        bar_being_dragged.$bar.owidth -\n                        bar_being_dragged.$bar.finaldx,\n                });\n            } else if (is_resizing_right) {\n                bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\n                bar_being_dragged.update_bar_position({\n                    width:\n                        bar_being_dragged.$bar.owidth +\n                        bar_being_dragged.$bar.finaldx,\n                });\n            } else if (is_dragging) {\n                if (bar_being_dragged.task.drag_drop_x) {\n\n                    if (this.options.moving_scroll_bar) {\n                        this.moving_scroll_bar(e);\n                    }\n\n                    bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\n                    bar_being_dragged.update_bar_position({\n                        x:\n                            bar_being_dragged.$bar.ox +\n                            bar_being_dragged.$bar.finaldx\n                    });\n                }\n                if (bar_being_dragged.task.drag_drop_y) {\n                    const y = bar_being_dragged.$bar.oy + dy;\n                    if (y < min_y) {\n                        dy = min_y - bar_being_dragged.$bar.oy;\n                    } else if (y > max_y) {\n                        dy = max_y - bar_being_dragged.$bar.oy;\n                    }\n                    bar_being_dragged.$bar.finaldy = this.get_snap_y_position(dy);\n                    bar_being_dragged.update_bar_position({\n                        y:\n                            bar_being_dragged.$bar.oy +\n                            bar_being_dragged.$bar.finaldy\n                    });\n                }\n            }\n\n            // update children\n            bars.forEach((bar) => {\n                if (bar.task.id === parent_bar_id) {\n                    return;\n                }\n                const $bar = bar.$bar;\n                $bar.finaldx = this.get_snap_x_position(dx);\n                this.hide_popup();\n                if (is_resizing_left) {\n                    bar.update_bar_position({\n                        x: $bar.ox + $bar.finaldx,\n                    });\n                } else if (is_dragging) {\n                    bar.update_bar_position({\n                        x: $bar.ox + $bar.finaldx,\n                    });\n                }\n            });\n        });\n\n        $.on(this.$svg, 'mouseup', (e) => {\n            if (action_in_progress()) {\n                bars.forEach((bar) => {\n                    bar.group.classList.remove('active');\n\n                    const $bar = bar.$bar;\n                    const start_row_index = bar.task._index;\n\n                    if ($bar.finaldx || $bar.finaldy) {\n                        bar.position_changed((is_dragging || is_resizing_left), (is_dragging || is_resizing_right));\n                        bar.set_action_completed();\n                        if (this.options.overlap)\n                            this.overlap(start_row_index, bar.task._index);\n                        else\n                            this.red_border();\n                    }\n                });\n            }\n\n            this.bar_being_dragged = null;\n            is_dragging = false;\n            is_resizing_left = false;\n            is_resizing_right = false;\n        });\n\n        this.bind_bar_progress();\n    }\n\n    bind_bar_progress() {\n        let x_on_start = 0;\n        let y_on_start = 0;\n        let is_resizing = null;\n        let bar = null;\n        let $bar_progress = null;\n        let $bar = null;\n\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n            is_resizing = true;\n            x_on_start = e.offsetX;\n            y_on_start = e.offsetY;\n\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\n            const id = $bar_wrapper.getAttribute('data-id');\n            bar = this.get_bar(id);\n\n            $bar_progress = bar.$bar_progress;\n            $bar = bar.$bar;\n\n            $bar_progress.finaldx = 0;\n            $bar_progress.owidth = $bar_progress.getWidth();\n            $bar_progress.min_dx = -$bar_progress.getWidth();\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\n        });\n\n        $.on(this.$svg, 'mousemove', (e) => {\n            if (!is_resizing) return;\n            let dx = e.offsetX - x_on_start;\n            let dy = e.offsetY - y_on_start;\n\n            if (dx > $bar_progress.max_dx) {\n                dx = $bar_progress.max_dx;\n            }\n            if (dx < $bar_progress.min_dx) {\n                dx = $bar_progress.min_dx;\n            }\n\n            const $handle = bar.$handle_progress;\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\n            $bar_progress.finaldx = dx;\n        });\n        $.on(this.$svg, 'mouseup', () => {\n            if (is_resizing) {\n                if (!($bar_progress && $bar_progress.finaldx)) return;\n                bar.progress_changed();\n                bar.set_action_completed();\n            }\n            is_resizing = false;\n        });\n    }\n\n    compute_row_sub_level(row_id) {\n        const task_in_same_row = this.tasks.filter(task => task.row === row_id);\n        //ordina per data le task in quella riga\n        task_in_same_row.sort((a, b) => a._start - b._start);\n\n        let sub_levels = [];\n\n        task_in_same_row.forEach(task => {\n            let i = 0;\n            // Trova l'indice del sotto livello in cui inserire questa task\n            for (i = 0; i < sub_levels.length; i++) {\n                const last_task_in_sub_level = sub_levels[i][sub_levels[i].length - 1];\n                if (task._start >= last_task_in_sub_level._end)\n                    break;\n            }\n\n            task._sub_level_index = i;\n            if (!sub_levels[task._sub_level_index])\n                sub_levels[task._sub_level_index] = [];\n\n            sub_levels[task._sub_level_index].push(task);\n        });\n\n        return sub_levels;\n    }\n\n    compute_row_height(nlevels) {\n        nlevels = nlevels > 0 ? nlevels : 1;\n        const row_height = (this.options.bar_height + this.options.padding) * nlevels;\n        return row_height;\n    }\n\n    compute_row_y(row_index, fixed_column_width) {\n        let sum_y = this.rows[row_index].y;\n        for (let i = row_index; i < this.rows.length; i++) {\n            $.attr(this.rows[i].rect, 'y', sum_y);\n            if (fixed_column_width !== 0) {\n                $.attr(this.rows[i].fixed_rect, 'y', sum_y);\n                //cell\n                for (let c = 0; c < this.options.fixed_columns.length; c++) {\n                    $.attr(this.rows[i].cell_wrapper[c].fixed_cell, 'y', sum_y);\n                    if (this.rows[i].cell_wrapper[c].text)\n                        $.attr(this.rows[i].cell_wrapper[c].text, 'y', sum_y + 24);\n                }\n            }\n\n            this.rows[i].y = sum_y;\n            sum_y += this.rows[i].height;\n            //line\n            if (fixed_column_width !== 0) {\n                $.attr(this.rows[i].fixed_line, 'y1', sum_y);\n                $.attr(this.rows[i].fixed_line, 'y2', sum_y);\n            }\n            $.attr(this.rows[i].line, 'y1', sum_y);\n            $.attr(this.rows[i].line, 'y2', sum_y);\n        }\n    }\n\n    overlap(start_row_index, end_row_index) {\n        let render = false;\n        let update_from_this_row_index = end_row_index;\n        const fixed_column_width = parseInt(this.$column_svg.getAttribute('width'));\n\n        const end_row = this.rows[end_row_index];\n        const new_end_sub_level = this.compute_row_sub_level(end_row.id);\n        if (new_end_sub_level.length !== end_row.sub_level.length) {\n            end_row.sub_level = new_end_sub_level;\n            end_row.height = this.compute_row_height(end_row.sub_level.length);\n\n            $.attr(end_row.rect, 'height', end_row.height);\n            if (fixed_column_width !== 0) {\n                $.attr(end_row.fixed_rect, 'height', end_row.height);\n                for (let i = 0; i < this.options.fixed_columns.length; i++) {\n                    $.attr(end_row.cell_wrapper[i].fixed_cell, 'height', end_row.height);\n                }\n            }\n            render = true;\n        } else {\n            const bars_in_same_row = this.bars.filter(bar =>\n                bar.task._index === end_row_index\n            );\n            bars_in_same_row.forEach(bar => {\n                const new_y = bar.compute_y();\n                bar.update_bar_position({ y: new_y });\n            });\n        }\n\n        if (start_row_index != end_row_index) {\n            const start_row = this.rows[start_row_index];\n            const new_start_sub_level = this.compute_row_sub_level(start_row.id);\n            if (new_start_sub_level.length != start_row.sub_level.length) {\n                start_row.sub_level = new_start_sub_level;\n                start_row.height = this.compute_row_height(start_row.sub_level.length);\n\n                $.attr(start_row.rect, 'height', start_row.height);\n                if (fixed_column_width !== 0) {\n                    $.attr(start_row.fixed_rect, 'height', start_row.height);\n                    for (let i = 0; i < this.options.fixed_columns.length; i++) {\n                        $.attr(start_row.cell_wrapper[i].fixed_cell, 'height', start_row.height);\n                    }\n                }\n                render = true;\n                if (start_row_index < end_row_index)\n                    update_from_this_row_index = start_row_index;\n            }\n        }\n\n        if (render) {\n            const scrollTop = this.$container.scrollTop;\n            this.compute_row_y(update_from_this_row_index, fixed_column_width);\n            this.update_from_row(update_from_this_row_index, fixed_column_width);\n            if (scrollTop > (this.$svg.getAttribute('height') - this.$container.clientHeight))\n                this.$container.scrollTop = scrollTop - (this.options.bar_height * 2);\n        }\n    }\n\n    update_from_row(row_index, fixed_column_width) {\n\n        const max_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\n\n        //background\n        this.$svg.setAttribute('height', max_height);\n        const grid_background = this.$svg.querySelector('g.grid > rect');\n        $.attr(grid_background, 'height', max_height);\n\n        if (fixed_column_width !== 0) {\n            //fixed background\n            this.$column_svg.setAttribute('height', max_height);\n            const fixed_background = this.$column_svg.querySelector('g.grid > rect');\n            $.attr(fixed_background, 'height', max_height);\n\n            //fixed ticks\n            const fixed_ticks = Array.from(this.$column_svg.querySelectorAll('g.grid > path'));\n            fixed_ticks.forEach(tick => {\n                const curr_d = tick.getAttribute('d');\n                const new_d = curr_d.replace(/v\\s*[^v]*$/, `v ${max_height}`);\n\n                $.attr(tick, 'd', new_d);\n            });\n        }\n        //ticks\n        const ticks = Array.from(this.$svg.querySelectorAll('g.grid > path'));\n        ticks.forEach(tick => {\n            const curr_d = tick.getAttribute('d');\n            const new_d = curr_d.replace(/v\\s*[^v]*$/, `v ${max_height}`);\n\n            $.attr(tick, 'd', new_d);\n        });\n        //highlight\n        if (this.view_is(VIEW_MODE.DAY)) {\n            const today_highlight = this.$svg.getElementsByClassName('today-highlight');\n            $.attr(today_highlight[0], 'height', max_height);\n            const weekend_highlight = Array.from(this.$svg.getElementsByClassName('weekend-highlight'))\n            weekend_highlight.forEach(weekend => {\n                $.attr(weekend, 'height', max_height);\n            });\n        }\n        //bars\n        const bars_to_move = this.bars.filter(bar =>\n            bar.task._index >= row_index\n        );\n        bars_to_move.forEach(bar => {\n            const new_y = bar.compute_y();\n            bar.update_bar_position({ y: new_y });\n        });\n    }\n\n    moving_scroll_bar(e) {\n        //Variabile che serve per aggiornare la scrollbar\n        var scroll_bar = this.$svg.parentElement;\n        //coordinate x e y del mouse\n        var viewportX = e.clientX;\n        var viewportY = e.clientY;\n        //edges del container\n        var edgeTop = this.$container.offsetTop + this.options.header_height + (this.options.padding * 3);\n        var edgeLeft = this.$container.offsetLeft + (this.options.padding * 8);\n        var edgeBottom = this.$container.clientHeight - (this.options.padding * 2);\n        var edgeRight = this.$container.clientWidth - (this.options.padding * 2);\n        //variabili per capire in quale punto ci si trova\n        var isInLeftEdge = (viewportX < edgeLeft);\n        var isInRightEdge = (viewportX > edgeRight);\n        var isInTopEdge = (viewportY < edgeTop);\n        var isInBottomEdge = (viewportY > edgeBottom);\n        //I massimi sono larghezza e atezza del container\n        var maxScrollX = this.$container.scrollWidth;\n        var maxScrollY = this.$svg.getAttribute('height') - this.$container.clientHeight;\n        // Get the current scroll position of the document.(container)\n        var currentScrollX = this.$container.scrollLeft;\n        var currentScrollY = this.$container.scrollTop;\n        // Determine if the window can be scrolled in any particular direction.\n        var canScrollUp = (currentScrollY > 0);\n        var canScrollDown = (currentScrollY < maxScrollY);\n        var canScrollLeft = (currentScrollX > 0);\n        var canScrollRight = (currentScrollX < maxScrollX);\n\n        var nextScrollX = currentScrollX;\n        var nextScrollY = currentScrollY;\n\n        //Serve a calcolare la velocità con cui scrollare\n        var maxStep = 30;\n\n        // Should we scroll left?\n        if (isInLeftEdge && canScrollLeft) {\n            var intensity = ((edgeLeft - viewportX) / edgeLeft);\n            nextScrollX = (nextScrollX - (maxStep * intensity));\n            // Should we scroll right?\n        } else if (isInRightEdge && canScrollRight) {\n            var intensity = ((viewportX - edgeRight) / edgeLeft);\n            nextScrollX = (nextScrollX + (maxStep * intensity));\n        }\n\n        // Should we scroll up?\n        if (isInTopEdge && canScrollUp) {\n            var intensity = ((edgeTop - viewportY) / edgeTop);\n            nextScrollY = (nextScrollY - (maxStep * intensity));\n            // Should we scroll down?\n        } else if (isInBottomEdge && canScrollDown) {\n            var intensity = ((viewportY - edgeBottom) / edgeTop);\n            nextScrollY = (nextScrollY + (maxStep * intensity));\n        }\n\n        nextScrollX = Math.max(0, Math.min(maxScrollX, nextScrollX));\n        nextScrollY = Math.max(0, Math.min(maxScrollY, nextScrollY));\n\n        if (\n            (nextScrollX !== currentScrollX) ||\n            (nextScrollY !== currentScrollY)\n        ) {\n            scroll_bar.scrollLeft = nextScrollX;\n            scroll_bar.scrollTop = nextScrollY;\n        }\n    }\n\n    red_border() {\n        this.bars.forEach(bar => {\n            const bar_wrapper = $.closest('.bar-wrapper', bar.$bar);\n\n            if (this.bars.some(other_bar => {\n                return other_bar.task.id !== bar.task.id &&\n                    other_bar.task.row === bar.task.row &&\n                    bar.task._start < other_bar.task._end &&\n                    bar.task._end > other_bar.task._start;\n            })) {\n                bar_wrapper.classList.add('overlap');\n            }\n            else {\n                bar_wrapper.classList.remove('overlap');\n            }\n        });\n    }\n\n    get_all_dependent_tasks(task_id) {\n        let out = [];\n        let to_process = [task_id];\n        while (to_process.length) {\n            const deps = to_process.reduce((acc, curr) => {\n                acc = acc.concat(this.dependency_map[curr]);\n                return acc;\n            }, []);\n\n            out = out.concat(deps);\n            to_process = deps.filter((d) => !to_process.includes(d));\n        }\n\n        return out.filter(Boolean);\n    }\n\n    show_cell_popup(cell, cell_value, cell_tooltip, e) {\n        if (this.bar_being_dragged) return;\n        if (cell_value === cell_tooltip)\n            cell_tooltip = '';\n        this.show_popup({\n            target_element: cell,\n            title: cell_value,\n            description: '',\n            subtitle: cell_tooltip,\n            task: '',\n            e: e,\n        });\n    }\n\n    get_snap_x_position(dx) {\n        let odx = dx,\n            rem,\n            position,\n            divider;\n\n        switch (this.options.view_mode) {\n            case VIEW_MODE.MONTH:\n                divider = 30;\n                break;\n            case VIEW_MODE.WEEK:\n                divider = 7;\n                break;\n            case VIEW_MODE.DAY:\n                divider = 24;\n                break;\n            case VIEW_MODE.HALF_DAY:\n                divider = 12;\n                break;\n            case VIEW_MODE.QUARTER_DAY:\n                divider = 6;\n                break;\n            case VIEW_MODE.HOUR:\n                divider = 60;\n                break;\n            default:\n                divider = 1\n                break;\n        }\n        rem = dx % (this.options.column_width / divider);\n        position =\n            odx -\n            rem +\n            (rem < this.options.column_width / (2 * divider)\n                ? 0\n                : this.options.column_width / divider);\n        return position;\n    }\n\n    get_snap_y_position(dy) {\n        let ody = dy,\n            rem,\n            position;\n        const row_height = this.options.bar_height + this.options.padding;\n        rem = Math.abs(ody) % row_height;\n        position = ody - rem + (rem < row_height / 2 ? 0 : row_height);\n        if (ody < 0) {\n            position = Math.abs(ody) - rem + (rem < row_height / 2 ? 0 : row_height);\n            position = -position;\n        }\n        return position;\n    }\n\n    unselect_all() {\n        [...this.$column_svg.querySelectorAll('.cell-wrapper.selected-row')].forEach((el) => {\n            el.classList.remove('selected-row');\n        });\n        [...this.$svg.querySelectorAll('.grid-row.selected-row')].forEach((el) => {\n            el.classList.remove('selected-row');\n        });\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n            el.classList.remove('active');\n        });\n    }\n\n    view_is(modes) {\n        if (typeof modes === 'string') {\n            return this.options.view_mode === modes;\n        }\n\n        if (Array.isArray(modes)) {\n            return modes.some((mode) => this.options.view_mode === mode);\n        }\n\n        return false;\n    }\n\n    get_task(id) {\n        return this.tasks.find((task) => {\n            return task.id === id;\n        });\n    }\n\n    get_bar(id) {\n        return this.bars.find((bar) => {\n            return bar.task.id === id;\n        });\n    }\n\n    show_popup(options) {\n        if (!this.popup) {\n            this.popup = new Popup(\n                this.popup_wrapper,\n                this.options.custom_popup_html\n            );\n        }\n        const scroll = this.$container.scrollTop;\n        this.popup.show(options, this.$container_parent, scroll);\n    }\n\n    hide_popup() {\n        this.popup && this.popup.hide();\n    }\n\n    trigger_event(event, args) {\n        if (this.options['on_' + event]) {\n            this.options['on_' + event].apply(null, args);\n        }\n    }\n\n    /**\n     * Gets the oldest starting date from the list of tasks\n     *\n     * @returns Date\n     * @memberof Scheduler\n     */\n    get_oldest_starting_date() {\n        return this.tasks\n            .map((task) => task._start)\n            .reduce((prev_date, cur_date) =>\n                cur_date <= prev_date ? cur_date : prev_date\n            );\n    }\n\n    /**\n     * Clear all elements from the parent svg element\n     *\n     * @memberof Scheduler\n     */\n    clear() {\n        this.$svg.innerHTML = '';\n        this.$column_svg.innerHTML = '';\n    }\n}\n\nScheduler.VIEW_MODE = VIEW_MODE;\n\nfunction generate_id(task) {\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\n}\n"],"names":[],"mappings":"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"}